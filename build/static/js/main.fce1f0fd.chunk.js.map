{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.js","components/Loader.js","services/cryptoApi.js","components/Cryptocurrencies.js","services/cryptoNewsApi.js","components/News.js","components/Homepage.js","components/Exchanges.js","components/LineChart.js","components/CryptoDetails.js","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","Loader","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","console","log","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","parseFloat","price","toFixed","millify","marketCap","change","style","color","fontWeight","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Text","Typography","Option","Select","demoImageUrl","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","i","href","rel","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","description","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","index","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","App","exact","path","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.fce1f0fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, {useState, useEffect} from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\nimport icon from \"../images/cryptocurrency.png\";\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [])\n\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActiveMenu(false);\n      window.addEventListener('click', setActiveMenu(false))\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize])\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">CryptoWatch</Link>\n        </Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/exchanges\">Exchanges</Link>\n        </Menu.Item>\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/news\">News</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react'\nimport {Spin} from 'antd'\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <Spin />\n    </div>\n  )\n}\n\nexport default Loader\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-key\": \"coinranking89d4d39d96e76612faebeab150dedf2a8284ab547ab91d8d\",\n};\n\nconst baseUrl = \"https://api.coinranking.com/v2\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`)\n    }),\n    getCryptoHistory: builder.query({\n      query: ({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(`/exchanges`)\n    }),\n  }),\n});\n\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetExchangesQuery } = cryptoApi;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport Loader from \"./Loader\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  console.log(cryptosList);\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n  if (isFetching) return <Loader />;\n  return (\n    <>\n    {!simplified && (\n      <div className=\"search-crypto\">\n      <Input\n        placeholder=\"Search Cryptocurrency\"\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n    </div>\n    )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img\n                    className=\"crypto-image\"\n                    src={currency.iconUrl}\n                    hoverable\n                  />\n                }\n              >\n                <p>Price: ${parseFloat(currency.price).toFixed(2)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                { currency.change< 0 ? (\n                  <p>Daily Change: <span style={{color: \"red\", fontWeight: \"bolder\"}}>{millify(currency.change)}%</span></p>\n                ) : (\n                  <p>Daily Change: <span style={{color: \"green\", fontWeight: \"bolder\"}}>{millify(currency.change)}%</span></p>\n                )}\n\n\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"c5ef9b46f5msh4ca4ed06551b534p194edfjsnec0a25f20847\",\n};\n\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\nconst { Text, Title } = Typography;\nconst { Option } = Select;\nconst demoImageUrl =\n  \"http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg\";\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n  const { data } = useGetCryptosQuery(100);\n  console.log(cryptoNews);\n  if (!cryptoNews?.value) return <Loader />;\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {data?.data?.coins.map((coin) => (\n              <Option value={coin.name}>{coin.name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\n                  src={news?.image?.thumbnail?.contentUrl || demoImageUrl}\n                  alt=\"news\"\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)} ...`\n                  : news.description}{\" \"}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImageUrl\n                    }\n                  ></Avatar>\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Cryptocurrencies from './Cryptocurrencies';\nimport News from './News'\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  console.log(data);\n  const globalStats = data?.data?.stats;\n  console.log(globalStats, 'ADADAD')\n  if (isFetching) return <Loader />;\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Cryptocurrency Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Cryptocurrencies\"\n            value={globalStats.total}\n          ></Statistic>\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={globalStats.totalExchanges}\n          ></Statistic>\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalStats.totalMarketCap)}\n          ></Statistic>\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          ></Statistic>\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={globalStats.totalMarkets}\n          ></Statistic>\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\n      </div>\n      <Cryptocurrencies simplified={true}/>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\n      </div>\n      <News simplified/>\n    </>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\nimport Loader from \"./Loader\";\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  if (isFetching) return <Loader />;\n  console.log(data);\n  const exchangesList = data?.data?.exchanges;\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Changes</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange, index) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{index + 1}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName, timePeriod }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n    coinPrice.push(coinHistory.data.history[i].price)\n    coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString())\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price in USD',\n        data: coinPrice,\n        fill: true,\n        backgroundColor: \"#0071bd\",\n        borderColor: '#0071bd'\n      }\n    ]\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true\n          }\n        }\n      ]\n    }\n  }\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {\" \"}\n            {coinHistory?.data?.change < 0 ? (\n              <span style={{ color: \"red\", fontWeight: \"bold\" }}>\n                {\" \"}\n                {coinHistory?.data?.change}% in last {timePeriod}\n              </span>\n            ) : (\n              <span style={{ color: \"green\", fontWeight: \"bold\" }}>\n                {\" \"}\n                {coinHistory?.data?.change}% in last {timePeriod}\n              </span>\n            )}\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: ${currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n// import Loader from './Loader';\nimport LineChart from './LineChart';\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from \"../services/cryptoApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({coinId, timePeriod});\n  console.log(coinHistory);\n  const cryptoDetails = data?.data?.coin;\n  if (isFetching) return \"Loading...\";\n  console.log(cryptoDetails);\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && parseFloat(cryptoDetails.price).toFixed(2)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US dollars. View value statistics,\n          market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={parseFloat(cryptoDetails.price).toFixed(2)} coinName={cryptoDetails.name} timePeriod={timePeriod}/>\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>\n              An overview showing the stats of {cryptoDetails.name}\n            </p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n            <p>\n              Overview showing the stats of all cryptocurrencies\n            </p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n            <Title level={3} className=\"coin-details-heading\">\n              What is {cryptoDetails.name}?\n              {HTMLReactParser(cryptoDetails.description)}\n            </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport Homepage from \"./components/Homepage\";\nimport Exchanges from \"./components/Exchanges\";\nimport Cryptocurrencies from \"./components/Cryptocurrencies\";\nimport CryptoDetails from \"./components/CryptoDetails\";\nimport News from \"./components/News\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            CryptoWatch <br />\n            All Rights Reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\n  }\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}