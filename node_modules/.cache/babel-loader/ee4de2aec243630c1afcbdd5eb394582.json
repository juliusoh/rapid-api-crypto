{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Julius/work-repos/rapid-api-crypto/src/components/CryptoDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from \"@ant-design/icons\"; // import Loader from './Loader';\n// import LineChart from './LineChart';\n\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const {\n    data,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  console.log(data);\n  const cryptoDetails = data.data.coin;\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n  const stats = [{\n    title: 'Price to USD',\n    value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 103\n    }, this)\n  }, {\n    title: 'Rank',\n    value: cryptoDetails.rank,\n    icon: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 55\n    }, this)\n  }, {\n    title: '24h Volume',\n    value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n    icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 103\n    }, this)\n  }, {\n    title: 'Market Cap',\n    value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 109\n    }, this)\n  }, {\n    title: 'All-time-high(daily avg.)',\n    value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 105\n    }, this)\n  }];\n  const genericStats = [{\n    title: 'Number Of Markets',\n    value: cryptoDetails.numberOfMarkets,\n    icon: /*#__PURE__*/_jsxDEV(FundOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 79\n    }, this)\n  }, {\n    title: 'Number Of Exchanges',\n    value: cryptoDetails.numberOfExchanges,\n    icon: /*#__PURE__*/_jsxDEV(MoneyCollectOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 83\n    }, this)\n  }, {\n    title: 'Aprroved Supply',\n    value: cryptoDetails.approvedSupply ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 71\n    }, this) : /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 91\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 115\n    }, this)\n  }, {\n    title: 'Total Supply',\n    value: `$ ${millify(cryptoDetails.totalSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 86\n    }, this)\n  }, {\n    title: 'Circulating Supply',\n    value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 98\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"cryptodetails\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CryptoDetails, \"Gri+n3dRvl8lPQ/KEjsx9926bK0=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/mnt/c/Users/Julius/work-repos/rapid-api-crypto/src/components/CryptoDetails.js"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","Title","Text","Option","CryptoDetails","coinId","timePeriod","setTimePeriod","data","isFetching","console","log","cryptoDetails","coin","time","stats","title","value","price","icon","rank","volume","marketCap","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","totalSupply","circulatingSupply"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n// import Loader from './Loader';\n// import LineChart from './LineChart';\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId)\n  console.log(data);\n  const cryptoDetails = data.data.coin;\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n  return <div>cryptodetails</div>;\n};\n\nexport default CryptoDetails;\n"]},"metadata":{},"sourceType":"module"}