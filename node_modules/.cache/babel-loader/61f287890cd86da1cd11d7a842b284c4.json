{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Exchanges = () => {\n  _s();\n\n  var _data$data;\n\n  const {\n    data,\n    isFetching\n  } = useGetExchangesQuery();\n  if (isFetching) return 'Loading..';\n  console.log(data);\n  const exchangesList = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.exchanges;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Exchanges\"\n  }, void 0, false);\n};\n\n_s(Exchanges, \"TNJ25d2uzvhcdqjZX7cQ10/heZc=\", false, function () {\n  return [useGetExchangesQuery];\n});\n\n_c = Exchanges;\nexport default Exchanges;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exchanges\");","map":{"version":3,"sources":["/mnt/c/Users/Julius/work-repos/rapid-api-crypto/src/components/Exchanges.js"],"names":["React","millify","Collapse","Row","Col","Typography","Avatar","HTMLReactParser","useGetExchangesQuery","Exchanges","data","isFetching","console","log","exchangesList","exchanges"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,GAAxB,EAA6BC,UAA7B,EAAyCC,MAAzC,QAAuD,MAAvD;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SAASC,oBAAT,QAAqC,uBAArC;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAAA;;AACtB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAsBH,oBAAoB,EAAhD;AACA,MAAIG,UAAJ,EAAgB,OAAO,WAAP;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAMI,aAAa,GAAGJ,IAAH,aAAGA,IAAH,qCAAGA,IAAI,CAAEA,IAAT,+CAAG,WAAYK,SAAlC;AACA,sBACE;AAAA;AAAA,mBADF;AAKD,CAVD;;GAAMN,S;UACwBD,oB;;;KADxBC,S;AAYN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport millify from 'millify'\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd'\nimport HTMLReactParser from 'html-react-parser'\n\nimport { useGetExchangesQuery } from '../services/cryptoApi'\n\nconst Exchanges = () => {\n  const {data, isFetching } = useGetExchangesQuery();\n  if (isFetching) return 'Loading..'\n  console.log(data);\n  const exchangesList = data?.data?.exchanges;\n  return (\n    <>\n      Exchanges\n    </>\n  )\n}\n\nexport default Exchanges\n"]},"metadata":{},"sourceType":"module"}