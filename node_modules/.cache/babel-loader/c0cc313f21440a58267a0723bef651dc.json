{"ast":null,"code":"import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/query/react\";var cryptoApiHeaders={\"x-rapidapi-host\":\"coinranking1.p.rapidapi.com\",\"x-rapidapi-key\":\"c5ef9b46f5msh4ca4ed06551b534p194edfjsnec0a25f20847\"};var baseUrl=\"https://coinranking1.p.rapidapi.com\";var createRequest=function createRequest(url){return{url:url,headers:cryptoApiHeaders};};export var cryptoApi=createApi({reducerPath:\"cryptoApi\",baseQuery:fetchBaseQuery({baseUrl:baseUrl}),endpoints:function endpoints(builder){return{getCryptos:builder.query({query:function query(count){return createRequest(\"/coins?limit=\".concat(count));}}),getCryptoDetails:builder.query({query:function query(coinId){return createRequest(\"/coin/\".concat(coinId));}}),getCryptoHistory:builder.query({query:function query(_ref){var coinId=_ref.coinId,timePeriod=_ref.timePeriod;return createRequest(\"/coin/\".concat(coinId,\"/history/\").concat(timePeriod));}}),getExchanges:builder.query({query:function query(){return createRequest(\"/exchanges\");}})};}});var useGetCryptosQuery=cryptoApi.useGetCryptosQuery,useGetCryptoDetailsQuery=cryptoApi.useGetCryptoDetailsQuery,useGetCryptoHistoryQuery=cryptoApi.useGetCryptoHistoryQuery,useGetExchangesQuery=cryptoApi.useGetExchangesQuery;export{useGetCryptosQuery,useGetCryptoDetailsQuery,useGetCryptoHistoryQuery,useGetExchangesQuery};","map":{"version":3,"sources":["/mnt/c/Users/Julius/work-repos/rapid-api-crypto/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseUrl","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACvB,kBAAmB,6BADI,CAEvB,iBAAkB,oDAFK,CAAzB,CAKA,GAAMC,CAAAA,OAAO,CAAG,qCAAhB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,QAAU,CAAEA,GAAG,CAAHA,GAAF,CAAOC,OAAO,CAAEJ,gBAAhB,CAAV,EAAtB,CAEA,MAAO,IAAMK,CAAAA,SAAS,CAAGP,SAAS,CAAC,CACjCQ,WAAW,CAAE,WADoB,CAEjCC,SAAS,CAAER,cAAc,CAAC,CAAEE,OAAO,CAAPA,OAAF,CAAD,CAFQ,CAGjCO,SAAS,CAAE,mBAACC,OAAD,QAAc,CACvBC,UAAU,CAAED,OAAO,CAACE,KAAR,CAAc,CACxBA,KAAK,CAAE,eAACC,KAAD,QAAWV,CAAAA,aAAa,wBAAiBU,KAAjB,EAAxB,EADiB,CAAd,CADW,CAIvBC,gBAAgB,CAAEJ,OAAO,CAACE,KAAR,CAAc,CAC9BA,KAAK,CAAE,eAACG,MAAD,QAAYZ,CAAAA,aAAa,iBAAUY,MAAV,EAAzB,EADuB,CAAd,CAJK,CAOvBC,gBAAgB,CAAEN,OAAO,CAACE,KAAR,CAAc,CAC9BA,KAAK,CAAE,wBAAEG,CAAAA,MAAF,MAAEA,MAAF,CAAUE,UAAV,MAAUA,UAAV,OAA0Bd,CAAAA,aAAa,iBAAUY,MAAV,qBAA4BE,UAA5B,EAAvC,EADuB,CAAd,CAPK,CAUvBC,YAAY,CAAER,OAAO,CAACE,KAAR,CAAc,CAC1BA,KAAK,CAAE,uBAAMT,CAAAA,aAAa,cAAnB,EADmB,CAAd,CAVS,CAAd,EAHsB,CAAD,CAA3B,CAmBA,GAAQgB,CAAAA,kBAAR,CAAyGb,SAAzG,CAAQa,kBAAR,CAA4BC,wBAA5B,CAAyGd,SAAzG,CAA4Bc,wBAA5B,CAAsDC,wBAAtD,CAAyGf,SAAzG,CAAsDe,wBAAtD,CAAgFC,oBAAhF,CAAyGhB,SAAzG,CAAgFgB,oBAAhF,C","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"c5ef9b46f5msh4ca4ed06551b534p194edfjsnec0a25f20847\",\n};\n\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`)\n    }),\n    getCryptoHistory: builder.query({\n      query: ({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(`/exchanges`)\n    }),\n  }),\n});\n\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetExchangesQuery } = cryptoApi;\n"]},"metadata":{},"sourceType":"module"}