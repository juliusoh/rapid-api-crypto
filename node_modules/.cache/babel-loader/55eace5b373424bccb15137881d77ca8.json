{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Julius/work-repos/rapid-api-crypto/src/components/LineChart.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst LineChart = ({\n  coinHistory,\n  currentPrice,\n  coinName,\n  timePeriod\n}) => {\n  var _coinHistory$data2, _coinHistory$data3, _coinHistory$data4;\n\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < (coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$data = coinHistory.data) === null || _coinHistory$data === void 0 ? void 0 : (_coinHistory$data$his = _coinHistory$data.history) === null || _coinHistory$data$his === void 0 ? void 0 : _coinHistory$data$his.length); i++) {\n    var _coinHistory$data, _coinHistory$data$his;\n\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [{\n      label: 'Price in USD',\n      data: coinPrice,\n      fill: false,\n      backgroundColor: \"#0071bd\",\n      borderColor: '#0071bd'\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {}\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"chart-header\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"chart-title\",\n        children: [coinName, \" Price Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"price-container\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          className: \"price-change\",\n          children: [\" \", (coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$data2 = coinHistory.data) === null || _coinHistory$data2 === void 0 ? void 0 : _coinHistory$data2.change) < 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontWeight: \"bold\"\n            },\n            children: [\" \", coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$data3 = coinHistory.data) === null || _coinHistory$data3 === void 0 ? void 0 : _coinHistory$data3.change, \"% in last \", timePeriod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"green\",\n              fontWeight: \"bold\"\n            },\n            children: [\" \", coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$data4 = coinHistory.data) === null || _coinHistory$data4 === void 0 ? void 0 : _coinHistory$data4.change, \"% in last \", timePeriod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          className: \"current-price\",\n          children: [\"Current \", coinName, \" Price: $\", currentPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/mnt/c/Users/Julius/work-repos/rapid-api-crypto/src/components/LineChart.js"],"names":["React","Line","Col","Row","Typography","Title","LineChart","coinHistory","currentPrice","coinName","timePeriod","coinPrice","coinTimestamp","i","data","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","change","color","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName, timePeriod }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n    coinPrice.push(coinHistory.data.history[i].price)\n    coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString())\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price in USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: '#0071bd'\n      }\n    ]\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {}\n        }\n      ]\n    }\n  }\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {\" \"}\n            {coinHistory?.data?.change < 0 ? (\n              <span style={{ color: \"red\", fontWeight: \"bold\" }}>\n                {\" \"}\n                {coinHistory?.data?.change}% in last {timePeriod}\n              </span>\n            ) : (\n              <span style={{ color: \"green\", fontWeight: \"bold\" }}>\n                {\" \"}\n                {coinHistory?.data?.change}% in last {timePeriod}\n              </span>\n            )}\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: ${currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      {/* <Line data={data} options={options} /> */}\n    </>\n  );\n};\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}