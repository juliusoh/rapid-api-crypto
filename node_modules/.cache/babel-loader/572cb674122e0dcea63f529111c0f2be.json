{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Julius/work-repos/rapid-api-crypto/src/components/CryptoDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from \"@ant-design/icons\"; // import Loader from './Loader';\n// import LineChart from './LineChart';\n\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  var _data$data;\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const {\n    data,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  console.log(data);\n  const cryptoDetails = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.coin;\n  console.log(cryptoDetails);\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"]; // const stats = [\n  //   {\n  //     title: \"Price to USD\",\n  //     value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n  //     icon: <DollarCircleOutlined />,\n  //   },\n  //   { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n  //   {\n  //     title: \"24h Volume\",\n  //     value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n  //     icon: <ThunderboltOutlined />,\n  //   },\n  //   {\n  //     title: \"Market Cap\",\n  //     value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n  //     icon: <DollarCircleOutlined />,\n  //   },\n  //   {\n  //     title: \"All-time-high(daily avg.)\",\n  //     value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n  //     icon: <TrophyOutlined />,\n  //   },\n  // ];\n  // const genericStats = [\n  //   {\n  //     title: \"Number Of Markets\",\n  //     value: cryptoDetails.numberOfMarkets,\n  //     icon: <FundOutlined />,\n  //   },\n  //   {\n  //     title: \"Number Of Exchanges\",\n  //     value: cryptoDetails.numberOfExchanges,\n  //     icon: <MoneyCollectOutlined />,\n  //   },\n  //   {\n  //     title: \"Aprroved Supply\",\n  //     value: cryptoDetails.approvedSupply ? (\n  //       <CheckOutlined />\n  //     ) : (\n  //       <StopOutlined />\n  //     ),\n  //     icon: <ExclamationCircleOutlined />,\n  //   },\n  //   {\n  //     title: \"Total Supply\",\n  //     value: `$ ${millify(cryptoDetails.totalSupply)}`,\n  //     icon: <ExclamationCircleOutlined />,\n  //   },\n  //   {\n  //     title: \"Circulating Supply\",\n  //     value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n  //     icon: <ExclamationCircleOutlined />,\n  //   },\n  // ];\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"coin-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      className: \"coin-heading-container\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"coin-name\",\n        children: [cryptoDetails.name, \" (\", cryptoDetails.slug, \") Price\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [cryptoDetails.name, \" live price in US dollars. View value statistics, market cap and supply.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: \"7d\",\n      className: \"select-timeperiod\",\n      placeholder: \"Select Time Period\",\n      onChange: value => setTimePeriod(value),\n      children: time.map(date => /*#__PURE__*/_jsxDEV(Option, {\n        children: date\n      }, date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoDetails, \"Gri+n3dRvl8lPQ/KEjsx9926bK0=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/mnt/c/Users/Julius/work-repos/rapid-api-crypto/src/components/CryptoDetails.js"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","Title","Text","Option","CryptoDetails","coinId","timePeriod","setTimePeriod","data","isFetching","console","log","cryptoDetails","coin","time","name","slug","value","map","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,MAA7C;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,YAHF,EAIEC,yBAJF,EAKEC,YALF,EAMEC,cANF,EAOEC,aAPF,EAQEC,cARF,EASEC,mBATF,QAUO,mBAVP,C,CAWA;AACA;;AACA,SAASC,wBAAT,QAAyC,uBAAzC;;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAkBb,UAAxB;AACA,MAAM;AAAEc,EAAAA;AAAF,IAAab,MAAnB;;AAEA,MAAMc,aAAa,GAAG,MAAM;AAAA;;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAapB,SAAS,EAA5B;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAEyB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBT,wBAAwB,CAACK,MAAD,CAArD;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAMI,aAAa,GAAGJ,IAAH,aAAGA,IAAH,qCAAGA,IAAI,CAAEA,IAAT,+CAAG,WAAYK,IAAlC;AAEAH,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AACA,QAAME,IAAI,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C,IAA7C,CAAb,CAR0B,CAU1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAA,mBACGF,aAAa,CAACG,IADjB,QACyBH,aAAa,CAACI,IADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,mBACGJ,aAAa,CAACG,IADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,MAAD;AACE,MAAA,YAAY,EAAC,IADf;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,WAAW,EAAC,oBAHd;AAIE,MAAA,QAAQ,EAAGE,KAAD,IAAWV,aAAa,CAACU,KAAD,CAJpC;AAAA,gBAMGH,IAAI,CAACI,GAAL,CAAUC,IAAD,iBACR,QAAC,MAAD;AAAA,kBAAoBA;AAApB,SAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,cADD;AANH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAzFD;;GAAMf,a;UACenB,S,EAEUe,wB;;;KAHzBI,a;AA2FN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n// import Loader from './Loader';\n// import LineChart from './LineChart';\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  console.log(data);\n  const cryptoDetails = data?.data?.coin;\n\n  console.log(cryptoDetails);\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  // const stats = [\n  //   {\n  //     title: \"Price to USD\",\n  //     value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n  //     icon: <DollarCircleOutlined />,\n  //   },\n  //   { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n  //   {\n  //     title: \"24h Volume\",\n  //     value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n  //     icon: <ThunderboltOutlined />,\n  //   },\n  //   {\n  //     title: \"Market Cap\",\n  //     value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n  //     icon: <DollarCircleOutlined />,\n  //   },\n  //   {\n  //     title: \"All-time-high(daily avg.)\",\n  //     value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n  //     icon: <TrophyOutlined />,\n  //   },\n  // ];\n\n  // const genericStats = [\n  //   {\n  //     title: \"Number Of Markets\",\n  //     value: cryptoDetails.numberOfMarkets,\n  //     icon: <FundOutlined />,\n  //   },\n  //   {\n  //     title: \"Number Of Exchanges\",\n  //     value: cryptoDetails.numberOfExchanges,\n  //     icon: <MoneyCollectOutlined />,\n  //   },\n  //   {\n  //     title: \"Aprroved Supply\",\n  //     value: cryptoDetails.approvedSupply ? (\n  //       <CheckOutlined />\n  //     ) : (\n  //       <StopOutlined />\n  //     ),\n  //     icon: <ExclamationCircleOutlined />,\n  //   },\n  //   {\n  //     title: \"Total Supply\",\n  //     value: `$ ${millify(cryptoDetails.totalSupply)}`,\n  //     icon: <ExclamationCircleOutlined />,\n  //   },\n  //   {\n  //     title: \"Circulating Supply\",\n  //     value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n  //     icon: <ExclamationCircleOutlined />,\n  //   },\n  // ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US dollars. View value statistics,\n          market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n"]},"metadata":{},"sourceType":"module"}