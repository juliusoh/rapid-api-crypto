{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Julius/work-repos/rapid-api-crypto/src/components/Exchanges.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typ;\n\nconst Exchanges = () => {\n  _s();\n\n  var _data$data;\n\n  const {\n    data,\n    isFetching\n  } = useGetExchangesQuery();\n  if (isFetching) return 'Loading..';\n  console.log(data);\n  const exchangesList = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.exchanges;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: \"Exchanges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: \"24h Trade Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: \"Markets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: \"Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: exchangesList.map(exchange => /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          children: /*#__PURE__*/_jsxDEV(Panel, {\n            showArrow: false,\n            header: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 6,\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [exchange.rank, \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: \"exchange-image\",\n                  src: exchange.iconUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: exchange.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 6,\n                children: [\"$\", millify(exchange.volume)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 6,\n                children: millify(exchange.numberOfMarkets)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 6,\n                children: [millify(exchange.marketShare), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this)]\n            }, exchange.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this),\n            children: HTMLReactParser(exchange.description || '')\n          }, exchange.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Exchanges, \"TNJ25d2uzvhcdqjZX7cQ10/heZc=\", false, function () {\n  return [useGetExchangesQuery];\n});\n\n_c = Exchanges;\nexport default Exchanges;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exchanges\");","map":{"version":3,"sources":["/mnt/c/Users/Julius/work-repos/rapid-api-crypto/src/components/Exchanges.js"],"names":["React","millify","Collapse","Row","Col","Typography","Avatar","HTMLReactParser","useGetExchangesQuery","Text","Typ","Exchanges","data","isFetching","console","log","exchangesList","exchanges","map","exchange","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","description"],"mappings":"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","sourcesContent":["import React from 'react'\nimport millify from 'millify'\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd'\nimport HTMLReactParser from 'html-react-parser'\n\nimport { useGetExchangesQuery } from '../services/cryptoApi'\n\nconst {Text} = Typ\nconst Exchanges = () => {\n  const {data, isFetching } = useGetExchangesQuery();\n  if (isFetching) return 'Loading..'\n  console.log(data);\n  const exchangesList = data?.data?.exchanges;\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Changes</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n            <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={(\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text><strong>{exchange.rank}.</strong></Text>\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                      <Text><strong>{exchange.name}</strong></Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                  )}\n              >\n                {HTMLReactParser(exchange.description || '')}\n                </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Exchanges\n"]},"metadata":{},"sourceType":"module"}